name: Extract Database Changes
on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:

jobs:
  extract-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Create changes file
        run: |
          python3 - << 'EOF'
          import re

          def extract_relevant_entries():
              changelog = """$(curl -s https://raw.githubusercontent.com/hashicorp/terraform-provider-aws/refs/heads/main/CHANGELOG.md)"""
              
              # Keywords to search for
              db_keywords = r'(rds|dynamodb|docdb|\bdb\b|redshift|aurora)'
              sections = r'(FEATURES:|ENHANCEMENTS:|BUG FIXES:)'
              
              # Extract relevant lines
              relevant_lines = []
              current_section = None
              
              for line in changelog.split('\n'):
                  if re.search(sections, line):
                      current_section = line
                      relevant_lines.append(line)
                  elif current_section and (
                      re.search(db_keywords, line.lower()) or
                      current_section in ['FEATURES:', 'ENHANCEMENTS:', 'BUG FIXES:']
                  ):
                      relevant_lines.append(line)
              
              # Write to file
              with open('changes.md', 'w') as f:
                  f.write('\n'.join(relevant_lines))

          extract_relevant_entries()
          EOF

      - name: Commit changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add changes.md
          git diff --quiet && git diff --staged --quiet || git commit -m "Update database-related changes"
          git push

      - name: Create issue if changes exist
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const changes = fs.readFileSync('changes.md', 'utf8');
            if (changes.trim()) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'New Database-Related Changes Detected',
                body: 'New database-related changes have been detected:\n\n```\n' + changes + '\n```'
              });
            }
